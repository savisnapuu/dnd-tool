{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/combatants-form-4/EnemyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Form, Formik, FieldArray } from \"formik\";\nimport DataContext from \"../../DataContext\";\nimport { generate } from \"shortid\";\nimport { Button, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EnemyForm = _ref => {\n  _s();\n\n  let {\n    bindSubmitForm\n  } = _ref;\n  const {\n    pushEnemies\n  } = useContext(DataContext);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      a: \"\"\n    },\n    onSubmit: (values, _ref2) => {\n      let {\n        setSubmitting\n      } = _ref2;\n      console.log(\"Enemy Form\");\n      pushEnemies(values);\n      setSubmitting(false);\n    },\n    children: formikProps => {\n      const {\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = formikProps; // bind the submission handler remotely\n\n      bindSubmitForm(formikProps.submitForm);\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"combatants\",\n          children: _ref3 => {\n            let {\n              push,\n              remove\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: props.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: () => push({\n                    id: generate(),\n                    name: \"\",\n                    hp: \"\",\n                    type: props.name\n                  }),\n                  children: \"Add New Field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this), values.combatants.map((combatant, index) => {\n                const name = `combatants[${index}.name]`;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    name: name,\n                    value: combatant.name,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `combatants[${index}.hp]`,\n                    value: combatant.hp,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => remove(index),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 25\n                  }, this)]\n                }, combatant.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(values, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnemyForm, \"bwNwmTS2BVZYiii2/yJZWRKnpRU=\");\n\n_c = EnemyForm;\nexport default EnemyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnemyForm\");","map":{"version":3,"names":["React","useContext","Form","Formik","FieldArray","DataContext","generate","Button","TextField","EnemyForm","bindSubmitForm","pushEnemies","a","values","setSubmitting","console","log","formikProps","handleChange","handleBlur","handleSubmit","submitForm","push","remove","props","name","id","hp","type","combatants","map","combatant","index","JSON","stringify"],"sources":["/home/visna/Code/dnd-tool2/src/components/combatants-form-4/EnemyForm.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Form, Formik, FieldArray } from \"formik\";\nimport DataContext from \"../../DataContext\";\nimport { generate } from \"shortid\";\nimport { Button, TextField } from \"@mui/material\";\n\nconst EnemyForm = ({ bindSubmitForm }) => {\n  const { pushEnemies } = useContext(DataContext);\n  return (\n    <Formik\n      initialValues={{ a: \"\" }}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(\"Enemy Form\");\n        pushEnemies(values);\n        setSubmitting(false);\n      }}\n    >\n      {(formikProps) => {\n        const { values, handleChange, handleBlur, handleSubmit } = formikProps;\n        // bind the submission handler remotely\n        bindSubmitForm(formikProps.submitForm);\n        return (\n          <Form>\n            <FieldArray name=\"combatants\">\n              {({ push, remove }) => (\n                <div>\n                  <div>\n                    <h2>{props.name}</h2>\n                    <Button\n                      type=\"button\"\n                      onClick={() =>\n                        push({\n                          id: generate(),\n                          name: \"\",\n                          hp: \"\",\n                          type: props.name,\n                        })\n                      }\n                    >\n                      Add New Field\n                    </Button>\n                  </div>\n                  {values.combatants.map((combatant, index) => {\n                    const name = `combatants[${index}.name]`;\n                    return (\n                      <div key={combatant.id}>\n                        <TextField\n                          name={name}\n                          value={combatant.name}\n                          onChange={handleChange}\n                        />\n                        <TextField\n                          name={`combatants[${index}.hp]`}\n                          value={combatant.hp}\n                          onChange={handleChange}\n                        />\n                        <Button onClick={() => remove(index)}>x</Button>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n            <button type=\"submit\">Submit</button>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EnemyForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,QAAzC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;;;AAEA,MAAMC,SAAS,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC;EAAF,CAAuB;EACxC,MAAM;IAAEC;EAAF,IAAkBV,UAAU,CAACI,WAAD,CAAlC;EACA,oBACE,QAAC,MAAD;IACE,aAAa,EAAE;MAAEO,CAAC,EAAE;IAAL,CADjB;IAEE,QAAQ,EAAE,CAACC,MAAD,YAA+B;MAAA,IAAtB;QAAEC;MAAF,CAAsB;MACvCC,OAAO,CAACC,GAAR,CAAY,YAAZ;MACAL,WAAW,CAACE,MAAD,CAAX;MACAC,aAAa,CAAC,KAAD,CAAb;IACD,CANH;IAAA,UAQIG,WAAD,IAAiB;MAChB,MAAM;QAAEJ,MAAF;QAAUK,YAAV;QAAwBC,UAAxB;QAAoCC;MAApC,IAAqDH,WAA3D,CADgB,CAEhB;;MACAP,cAAc,CAACO,WAAW,CAACI,UAAb,CAAd;MACA,oBACE,QAAC,IAAD;QAAA,wBACE,QAAC,UAAD;UAAY,IAAI,EAAC,YAAjB;UAAA,UACG;YAAA,IAAC;cAAEC,IAAF;cAAQC;YAAR,CAAD;YAAA,oBACC;cAAA,wBACE;gBAAA,wBACE;kBAAA,UAAKC,KAAK,CAACC;gBAAX;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,MAAD;kBACE,IAAI,EAAC,QADP;kBAEE,OAAO,EAAE,MACPH,IAAI,CAAC;oBACHI,EAAE,EAAEpB,QAAQ,EADT;oBAEHmB,IAAI,EAAE,EAFH;oBAGHE,EAAE,EAAE,EAHD;oBAIHC,IAAI,EAAEJ,KAAK,CAACC;kBAJT,CAAD,CAHR;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,EAiBGZ,MAAM,CAACgB,UAAP,CAAkBC,GAAlB,CAAsB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;gBAC3C,MAAMP,IAAI,GAAI,cAAaO,KAAM,QAAjC;gBACA,oBACE;kBAAA,wBACE,QAAC,SAAD;oBACE,IAAI,EAAEP,IADR;oBAEE,KAAK,EAAEM,SAAS,CAACN,IAFnB;oBAGE,QAAQ,EAAEP;kBAHZ;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAME,QAAC,SAAD;oBACE,IAAI,EAAG,cAAac,KAAM,MAD5B;oBAEE,KAAK,EAAED,SAAS,CAACJ,EAFnB;oBAGE,QAAQ,EAAET;kBAHZ;oBAAA;oBAAA;oBAAA;kBAAA,QANF,eAWE,QAAC,MAAD;oBAAQ,OAAO,EAAE,MAAMK,MAAM,CAACS,KAAD,CAA7B;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAXF;gBAAA,GAAUD,SAAS,CAACL,EAApB;kBAAA;kBAAA;kBAAA;gBAAA,QADF;cAeD,CAjBA,CAjBH;YAAA;cAAA;cAAA;cAAA;YAAA,QADD;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QADF,eAyCE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAzCF,eA0CE;UAAA,UAAMO,IAAI,CAACC,SAAL,CAAerB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B;QAAN;UAAA;UAAA;UAAA;QAAA,QA1CF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IA8CD;EA1DH;IAAA;IAAA;IAAA;EAAA,QADF;AA8DD,CAhED;;GAAMJ,S;;KAAAA,S;AAkEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}