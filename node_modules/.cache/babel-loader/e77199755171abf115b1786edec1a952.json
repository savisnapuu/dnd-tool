{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/testform.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  // Note that we have to initialize ALL of fields with values. These\n  // could come from props, but since we don’t want to prefill this form,\n  // we just use an empty string. If we don’t do this, React will yell\n  // at us.\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useFormik","SignupForm","formik","initialValues","firstName","lastName","email","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange"],"sources":["/home/visna/Code/dnd-tool2/src/components/testform.js"],"sourcesContent":["import React from \"react\";\n\nimport { useFormik } from \"formik\";\n\nconst SignupForm = () => {\n  // Note that we have to initialize ALL of fields with values. These\n\n  // could come from props, but since we don’t want to prefill this form,\n\n  // we just use an empty string. If we don’t do this, React will yell\n\n  // at us.\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n\n      lastName: \"\",\n\n      email: \"\",\n    },\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"firstName\">First Name</label>\n\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.firstName}\n      />\n\n      <label htmlFor=\"lastName\">Last Name</label>\n\n      <input\n        id=\"lastName\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.lastName}\n      />\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB;EAEA;EAEA;EAEA;EAEA,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,SAAS,EAAE,EADE;MAGbC,QAAQ,EAAE,EAHG;MAKbC,KAAK,EAAE;IALM,CADQ;IASvBC,QAAQ,EAAGC,MAAD,IAAY;MACpBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD;EAXsB,CAAD,CAAxB;EAcA,oBACE;IAAM,QAAQ,EAAEN,MAAM,CAACU,YAAvB;IAAA,wBACE;MAAO,OAAO,EAAC,WAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MACE,EAAE,EAAC,WADL;MAEE,IAAI,EAAC,WAFP;MAGE,IAAI,EAAC,MAHP;MAIE,QAAQ,EAAEV,MAAM,CAACW,YAJnB;MAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcJ;IALvB;MAAA;MAAA;MAAA;IAAA,QAHF,eAWE;MAAO,OAAO,EAAC,UAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAaE;MACE,EAAE,EAAC,UADL;MAEE,IAAI,EAAC,UAFP;MAGE,IAAI,EAAC,MAHP;MAIE,QAAQ,EAAEF,MAAM,CAACW,YAJnB;MAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcH;IALvB;MAAA;MAAA;MAAA;IAAA,QAbF,eAqBE;MAAO,OAAO,EAAC,OAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBF,eAuBE;MACE,EAAE,EAAC,OADL;MAEE,IAAI,EAAC,OAFP;MAGE,IAAI,EAAC,OAHP;MAIE,QAAQ,EAAEH,MAAM,CAACW,YAJnB;MAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcF;IALvB;MAAA;MAAA;MAAA;IAAA,QAvBF,eA+BE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CA1DD;;GAAML,U;UASWD,S;;;KATXC,U;AA4DN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}