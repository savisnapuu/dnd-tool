{"ast":null,"code":"var _jsxFileName = \"/home/visna/Documents/Code/dnd-tool/src/components/PlayerForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport * as yup from \"yup\";\nimport { FieldArray, Form, Formik, getIn } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport DataContext from \"../DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  combatants: yup.array().of(yup.object().shape({\n    name: yup.string().max(10),\n    hp: yup.string().min(2)\n  }))\n});\n\nconst PlayerFormm = props => {\n  _s();\n\n  const {\n    pushData\n  } = useContext(DataContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        combatants: [{\n          id: generate(),\n          name: \"\",\n          hp: \"\",\n          type: props.name\n        }]\n      },\n      onSubmit: values => {\n        pushData(values);\n      },\n      validationSchema: validationSchema,\n      children: _ref => {\n        let {\n          values,\n          handleChange,\n          errors\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"combatants\",\n            children: _ref2 => {\n              let {\n                push,\n                remove\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: props.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    onClick: () => push({\n                      id: generate(),\n                      name: \"\",\n                      hp: \"\",\n                      type: props.name\n                    }),\n                    children: \"Add New Field\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: formik.values.enemies.map((combatant, index) => {\n                    const name = `enemies[${index}.name]`;\n                    const hp = `enemies[${index}.hp]`;\n                    const init = `enemies[${index}.init]`;\n                    const bonus = `enemies[${index}.bonus]`;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        name: name,\n                        value: combatant.name,\n                        onChange: formik.handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 59,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: hp,\n                        value: combatant.hp,\n                        onChange: formik.handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: init,\n                        value: combatant.init,\n                        onChange: formik.handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: bonus,\n                        value: combatant.bonus,\n                        onChange: formik.handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 27\n                      }, this)]\n                    }, combatant.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(values, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayerFormm, \"toZ4t31oXbGuE1gYsYDMMgo0a6s=\");\n\n_c = PlayerFormm;\nexport default PlayerFormm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerFormm\");","map":{"version":3,"names":["React","useContext","yup","FieldArray","Form","Formik","getIn","TextField","Button","generate","DataContext","validationSchema","object","shape","combatants","array","of","name","string","max","hp","min","PlayerFormm","props","pushData","id","type","values","handleChange","errors","push","remove","formik","enemies","map","combatant","index","init","bonus","JSON","stringify"],"sources":["/home/visna/Documents/Code/dnd-tool/src/components/PlayerForm.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport * as yup from \"yup\";\nimport { FieldArray, Form, Formik, getIn } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport DataContext from \"../DataContext\";\n\nconst validationSchema = yup.object().shape({\n  combatants: yup.array().of(\n    yup.object().shape({\n      name: yup.string().max(10),\n      hp: yup.string().min(2),\n    })\n  ),\n});\n\nconst PlayerFormm = (props) => {\n  const { pushData } = useContext(DataContext);\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          combatants: [{ id: generate(), name: \"\", hp: \"\", type: props.name }],\n        }}\n        onSubmit={(values) => {\n          pushData(values);\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, errors }) => (\n          <Form>\n            <FieldArray name=\"combatants\">\n              {({ push, remove }) => (\n                <div>\n                  <div>\n                    <h2>{props.name}</h2>\n                    <Button\n                      type=\"button\"\n                      onClick={() =>\n                        push({\n                          id: generate(),\n                          name: \"\",\n                          hp: \"\",\n                          type: props.name,\n                        })\n                      }\n                    >\n                      Add New Field\n                    </Button>\n                  </div>\n                  <div>\n                    {formik.values.enemies.map((combatant, index) => {\n                      const name = `enemies[${index}.name]`;\n                      const hp = `enemies[${index}.hp]`;\n                      const init = `enemies[${index}.init]`;\n                      const bonus = `enemies[${index}.bonus]`;\n                      return (\n                        <div key={combatant.id}>\n                          <TextField\n                            name={name}\n                            value={combatant.name}\n                            onChange={formik.handleChange}\n                          />\n                          <TextField\n                            name={hp}\n                            value={combatant.hp}\n                            onChange={formik.handleChange}\n                          />\n                          <TextField\n                            name={init}\n                            value={combatant.init}\n                            onChange={formik.handleChange}\n                          />\n                          <TextField\n                            name={bonus}\n                            value={combatant.bonus}\n                            onChange={formik.handleChange}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </FieldArray>\n            <button type=\"submit\">Submit</button>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default PlayerFormm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}