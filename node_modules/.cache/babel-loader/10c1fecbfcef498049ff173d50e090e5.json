{"ast":null,"code":"var _jsxFileName = \"/home/visna/Documents/Code/dnd-tool/src/components/combatant-form/EnemyForm.js\";\nimport { TextField } from \"@mui/material\";\nimport { FieldArray, Form } from \"formik\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormA = _ref => {\n  let {\n    formik\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n      children: formik.values.enemies.map((enemy, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: enemy.name,\n            value: enemy.name,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Form A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"formA.name\",\n          value: formik.values.formA.name,\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), formik.errors.formA && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: formik.errors.formA.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"formA.email\",\n          value: formik.values.formA.email,\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), formik.errors.formA && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: formik.errors.formA.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(formik.values.formA, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormA;\nexport default FormA;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormA\");","map":{"version":3,"names":["TextField","FieldArray","Form","React","FormA","formik","values","enemies","map","enemy","index","name","handleChange","formA","handleBlur","errors","color","email","JSON","stringify"],"sources":["/home/visna/Documents/Code/dnd-tool/src/components/combatant-form/EnemyForm.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { FieldArray, Form } from \"formik\";\nimport React from \"react\";\n\nconst FormA = ({ formik }) => {\n  return (\n    <div>\n      <FieldArray>\n        {formik.values.enemies.map((enemy, index) => {\n          return (\n            <div key={index}>\n              <TextField\n                name={enemy.name}\n                value={enemy.name}\n                onChange={formik.handleChange}\n              />\n            </div>\n          );\n        })}\n      </FieldArray>\n      <div className={\"form\"}>\n        <h3>Form A</h3>\n        <div>\n          <label>Name </label>\n          <input\n            name=\"formA.name\"\n            value={formik.values.formA.name}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.formA && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.formA.name}</small>\n            </div>\n          )}\n        </div>\n        <br />\n        <div>\n          <label>Email </label>\n          <input\n            name=\"formA.email\"\n            value={formik.values.formA.email}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.formA && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.formA.email}</small>\n            </div>\n          )}\n        </div>\n        <pre>{JSON.stringify(formik.values.formA, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default FormA;\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC5B,oBACE;IAAA,wBACE,QAAC,UAAD;MAAA,UACGA,MAAM,CAACC,MAAP,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,CAACC,KAAD,EAAQC,KAAR,KAAkB;QAC3C,oBACE;UAAA,uBACE,QAAC,SAAD;YACE,IAAI,EAAED,KAAK,CAACE,IADd;YAEE,KAAK,EAAEF,KAAK,CAACE,IAFf;YAGE,QAAQ,EAAEN,MAAM,CAACO;UAHnB;YAAA;YAAA;YAAA;UAAA;QADF,GAAUF,KAAV;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVA;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAE,MAAhB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,YADP;UAEE,KAAK,EAAEL,MAAM,CAACC,MAAP,CAAcO,KAAd,CAAoBF,IAF7B;UAGE,MAAM,EAAEN,MAAM,CAACS,UAHjB;UAIE,QAAQ,EAAET,MAAM,CAACO;QAJnB;UAAA;UAAA;UAAA;QAAA,QAFF,EAQGP,MAAM,CAACU,MAAP,CAAcF,KAAd,iBACC;UAAK,KAAK,EAAE;YAAEG,KAAK,EAAE;UAAT,CAAZ;UAAA,uBACE;YAAA,UAAQX,MAAM,CAACU,MAAP,CAAcF,KAAd,CAAoBF;UAA5B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAgBE;QAAA;QAAA;QAAA;MAAA,QAhBF,eAiBE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,aADP;UAEE,KAAK,EAAEN,MAAM,CAACC,MAAP,CAAcO,KAAd,CAAoBI,KAF7B;UAGE,MAAM,EAAEZ,MAAM,CAACS,UAHjB;UAIE,QAAQ,EAAET,MAAM,CAACO;QAJnB;UAAA;UAAA;UAAA;QAAA,QAFF,EAQGP,MAAM,CAACU,MAAP,CAAcF,KAAd,iBACC;UAAK,KAAK,EAAE;YAAEG,KAAK,EAAE;UAAT,CAAZ;UAAA,uBACE;YAAA,UAAQX,MAAM,CAACU,MAAP,CAAcF,KAAd,CAAoBI;UAA5B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF,eA+BE;QAAA,UAAMC,IAAI,CAACC,SAAL,CAAed,MAAM,CAACC,MAAP,CAAcO,KAA7B,EAAoC,IAApC,EAA0C,CAA1C;MAAN;QAAA;QAAA;QAAA;MAAA,QA/BF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkDD,CAnDD;;KAAMT,K;AAqDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}