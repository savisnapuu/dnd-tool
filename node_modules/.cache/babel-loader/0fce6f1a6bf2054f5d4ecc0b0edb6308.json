{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/combatant-form/EnemyForm.js\";\nimport React from \"react\";\nimport { Form, FieldArray, getIn } from \"formik\";\nimport { Button, TextField } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EnemyForm = (_ref, props) => {\n  let {\n    formik\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [_ref2 => {\n      let {\n        values,\n        handleChange,\n        errors\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"combatants\",\n          children: _ref3 => {\n            let {\n              push,\n              remove\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: props.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 15,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: () => push({\n                    id: generate(),\n                    name: \"\",\n                    hp: \"\",\n                    type: props.name\n                  }),\n                  children: \"Add New Field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 16,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 17\n              }, this), values.combatants.map((combatant, index) => {\n                const name = `combatants[${index}.name]`;\n                const errorMessage = getIn(errors, name);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    name: name,\n                    value: combatant.name,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `combatants[${index}.hp]`,\n                    value: combatant.hp,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 23\n                  }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => remove(index),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 23\n                  }, this)]\n                }, combatant.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(values, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    }, /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Form A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"formA.combatants.name\",\n        value: formik.values.formA.combatants.name,\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), formik.errors.formA && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: formik.errors.formA.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"formA.email\",\n        value: formik.values.formA.email,\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), formik.errors.formA && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: formik.errors.formA.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(formik.values.formA, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EnemyForm;\nexport default EnemyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnemyForm\");","map":{"version":3,"names":["React","Form","FieldArray","getIn","Button","TextField","generate","EnemyForm","props","formik","values","handleChange","errors","push","remove","name","id","hp","type","combatants","map","combatant","index","errorMessage","color","JSON","stringify","formA","handleBlur","email"],"sources":["/home/visna/Code/dnd-tool2/src/components/combatant-form/EnemyForm.js"],"sourcesContent":["import React from \"react\";\nimport { Form, FieldArray, getIn } from \"formik\";\nimport { Button, TextField } from \"@mui/material\";\nimport { generate } from \"shortid\";\n\nconst EnemyForm = ({ formik }, props) => {\n  return (\n    <div className={\"form\"}>\n      {({ values, handleChange, errors }) => (\n        <Form>\n          <FieldArray name=\"combatants\">\n            {({ push, remove }) => (\n              <div>\n                <div>\n                  <h2>{props.name}</h2>\n                  <Button\n                    type=\"button\"\n                    onClick={() =>\n                      push({\n                        id: generate(),\n                        name: \"\",\n                        hp: \"\",\n                        type: props.name,\n                      })\n                    }\n                  >\n                    Add New Field\n                  </Button>\n                </div>\n                {values.combatants.map((combatant, index) => {\n                  const name = `combatants[${index}.name]`;\n                  const errorMessage = getIn(errors, name);\n                  return (\n                    <div key={combatant.id}>\n                      <TextField\n                        name={name}\n                        value={combatant.name}\n                        onChange={handleChange}\n                      />\n                      <TextField\n                        name={`combatants[${index}.hp]`}\n                        value={combatant.hp}\n                        onChange={handleChange}\n                      />\n                      {errorMessage && (\n                        <div style={{ color: \"red\" }}>{errorMessage}</div>\n                      )}\n                      <Button onClick={() => remove(index)}>x</Button>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </FieldArray>\n          <button type=\"submit\">Submit</button>\n          <pre>{JSON.stringify(values, null, 2)}</pre>\n        </Form>\n      )}\n      <h3>Form A</h3>\n      <div>\n        <label>Name </label>\n        <input\n          name=\"formA.combatants.name\"\n          value={formik.values.formA.combatants.name}\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.formA && (\n          <div style={{ color: \"red\" }}>\n            <small>{formik.errors.formA.name}</small>\n          </div>\n        )}\n      </div>\n      <br />\n      <div>\n        <label>Email </label>\n        <input\n          name=\"formA.email\"\n          value={formik.values.formA.email}\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.formA && (\n          <div style={{ color: \"red\" }}>\n            <small>{formik.errors.formA.email}</small>\n          </div>\n        )}\n      </div>\n      <pre>{JSON.stringify(formik.values.formA, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default EnemyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}