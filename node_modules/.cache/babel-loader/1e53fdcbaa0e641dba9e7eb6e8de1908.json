{"ast":null,"code":"var _jsxFileName = \"/home/visna/Documents/Code/dnd-tool/src/components/combatant-form/CombatantsForm.js\";\nimport React from \"react\";\nimport FormA from \"././PlayerForm\";\nimport FormB from \"./EnemyForm\";\nimport { Form, Formik, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  formA: Yup.object({\n    name: Yup.string().required(\"This field is required\"),\n    email: Yup.string().email(\"Invalid email address\").required(\"Email is required\")\n  }),\n  formB: Yup.object({\n    phone: Yup.string().required(\"This field is required\").min(6, \"At least 06 characters\")\n  })\n});\nexport default function CombatantForm() {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      formA: {\n        name: \"\",\n        email: \"\"\n      },\n      formB: {\n        phone: \"\"\n      },\n      enemies: [{\n        name: \"teet\",\n        hp: \"5\"\n      }]\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: formik => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormA, {\n          formik: formik\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormB, {\n          formik: formik\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = CombatantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombatantForm\");","map":{"version":3,"names":["React","FormA","FormB","Form","Formik","useFormik","Yup","validationSchema","object","formA","name","string","required","email","formB","phone","min","CombatantForm","enemies","hp","values","console","log","formik","handleSubmit"],"sources":["/home/visna/Documents/Code/dnd-tool/src/components/combatant-form/CombatantsForm.js"],"sourcesContent":["import React from \"react\";\nimport FormA from \"././PlayerForm\";\nimport FormB from \"./EnemyForm\";\nimport { Form, Formik, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst validationSchema = Yup.object({\n  formA: Yup.object({\n    name: Yup.string().required(\"This field is required\"),\n    email: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Email is required\"),\n  }),\n  formB: Yup.object({\n    phone: Yup.string()\n      .required(\"This field is required\")\n      .min(6, \"At least 06 characters\"),\n  }),\n});\n\nexport default function CombatantForm() {\n  return (\n    <Formik\n      initialValues={{\n        formA: {\n          name: \"\",\n          email: \"\",\n        },\n        formB: {\n          phone: \"\",\n        },\n        enemies: [{ name: \"teet\", hp: \"5\" }],\n      }}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {(formik) => {\n        return (\n          <Form onSubmit={formik.handleSubmit}>\n            <FormA formik={formik} />\n            <FormB formik={formik} />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;EAClCC,KAAK,EAAEH,GAAG,CAACE,MAAJ,CAAW;IAChBE,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADU;IAEhBC,KAAK,EAAEP,GAAG,CAACK,MAAJ,GACJE,KADI,CACE,uBADF,EAEJD,QAFI,CAEK,mBAFL;EAFS,CAAX,CAD2B;EAOlCE,KAAK,EAAER,GAAG,CAACE,MAAJ,CAAW;IAChBO,KAAK,EAAET,GAAG,CAACK,MAAJ,GACJC,QADI,CACK,wBADL,EAEJI,GAFI,CAEA,CAFA,EAEG,wBAFH;EADS,CAAX;AAP2B,CAAX,CAAzB;AAcA,eAAe,SAASC,aAAT,GAAyB;EACtC,oBACE,QAAC,MAAD;IACE,aAAa,EAAE;MACbR,KAAK,EAAE;QACLC,IAAI,EAAE,EADD;QAELG,KAAK,EAAE;MAFF,CADM;MAKbC,KAAK,EAAE;QACLC,KAAK,EAAE;MADF,CALM;MAQbG,OAAO,EAAE,CAAC;QAAER,IAAI,EAAE,MAAR;QAAgBS,EAAE,EAAE;MAApB,CAAD;IARI,CADjB;IAWE,QAAQ,EAAGC,MAAD,IAAY;MACpBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACD,CAbH;IAAA,UAeIG,MAAD,IAAY;MACX,oBACE,QAAC,IAAD;QAAM,QAAQ,EAAEA,MAAM,CAACC,YAAvB;QAAA,wBACE,QAAC,KAAD;UAAO,MAAM,EAAED;QAAf;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,MAAM,EAAEA;QAAf;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAOD;EAvBH;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;KA5BuBN,a"},"metadata":{},"sourceType":"module"}