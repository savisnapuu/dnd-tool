{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/combatants-form-4/CombatantsForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport PlayerForm from \"./PlayersForm\";\nimport EnemyForm from \"./EnemyForm\";\nimport ButtonBar from \"../ButtonBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CombatantForm = _ref => {\n  let {\n    submitMyForm\n  } = _ref;\n\n  //   async function handleSubmit() {\n  //     await formAref.current.Submit();\n  //     await formBref.current.Submit();\n  //   }\n  //   function handleChangeFormA(data) {\n  //     setFormData({ ...formData, formA: data });\n  //   }\n  //   function handleChangeFormB(data) {\n  //     setFormData({ ...formData, formB: data });\n  //   }\n  async function handleSubmitMyForm(e) {\n    if (submitMyForm) {\n      await submitMyForm(e);\n    }\n  }\n\n  const bindSubmitForm = submitForm => {\n    submitMyForm = submitForm;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitMyForm,\n      children: \"Submit from outside\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerForm, {\n      bindSubmitForm: bindSubmitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EnemyForm, {\n      bindSubmitForm: bindSubmitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}; // class CombatantForm extends React.Component {\n//   // will hold access to formikProps.submitForm, to trigger form submission outside of the form\n//   submitMyForm = null;\n//   handleSubmitMyForm = (e) => {\n//     if (this.submitMyForm) {\n//       this.submitMyForm(e);\n//     }\n//   };\n//   bindSubmitForm = (submitForm) => {\n//     this.submitMyForm = submitForm;\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <button onClick={this.handleSubmitMyForm}>Submit from outside</button>\n//         <PlayerForm bindSubmitForm={this.bindSubmitForm} />\n//         <ButtonBar></ButtonBar>\n//       </div>\n//     );\n//   }\n// }\n\n\n_c = CombatantForm;\nexport default CombatantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombatantForm\");","map":{"version":3,"names":["React","Formik","PlayerForm","EnemyForm","ButtonBar","CombatantForm","submitMyForm","handleSubmitMyForm","e","bindSubmitForm","submitForm"],"sources":["/home/visna/Code/dnd-tool2/src/components/combatants-form-4/CombatantsForm.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport PlayerForm from \"./PlayersForm\";\nimport EnemyForm from \"./EnemyForm\";\nimport ButtonBar from \"../ButtonBar\";\n\nconst CombatantForm = ({ submitMyForm }) => {\n  //   async function handleSubmit() {\n  //     await formAref.current.Submit();\n  //     await formBref.current.Submit();\n  //   }\n\n  //   function handleChangeFormA(data) {\n  //     setFormData({ ...formData, formA: data });\n  //   }\n\n  //   function handleChangeFormB(data) {\n  //     setFormData({ ...formData, formB: data });\n  //   }\n\n  async function handleSubmitMyForm(e) {\n    if (submitMyForm) {\n      await submitMyForm(e);\n    }\n  }\n  const bindSubmitForm = (submitForm) => {\n    submitMyForm = submitForm;\n  };\n\n  return (\n    <div>\n      <button onClick={handleSubmitMyForm}>Submit from outside</button>\n      <PlayerForm bindSubmitForm={bindSubmitForm} />\n      <EnemyForm bindSubmitForm={bindSubmitForm} />\n      <ButtonBar></ButtonBar>\n    </div>\n  );\n};\n\n// class CombatantForm extends React.Component {\n//   // will hold access to formikProps.submitForm, to trigger form submission outside of the form\n//   submitMyForm = null;\n\n//   handleSubmitMyForm = (e) => {\n//     if (this.submitMyForm) {\n//       this.submitMyForm(e);\n//     }\n//   };\n//   bindSubmitForm = (submitForm) => {\n//     this.submitMyForm = submitForm;\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <button onClick={this.handleSubmitMyForm}>Submit from outside</button>\n//         <PlayerForm bindSubmitForm={this.bindSubmitForm} />\n//         <ButtonBar></ButtonBar>\n//       </div>\n//     );\n//   }\n// }\n\nexport default CombatantForm;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,aAAa,GAAG,QAAsB;EAAA,IAArB;IAAEC;EAAF,CAAqB;;EAC1C;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA,eAAeC,kBAAf,CAAkCC,CAAlC,EAAqC;IACnC,IAAIF,YAAJ,EAAkB;MAChB,MAAMA,YAAY,CAACE,CAAD,CAAlB;IACD;EACF;;EACD,MAAMC,cAAc,GAAIC,UAAD,IAAgB;IACrCJ,YAAY,GAAGI,UAAf;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEH,kBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,cAAc,EAAEE;IAA5B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,SAAD;MAAW,cAAc,EAAEA;IAA3B;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA/BD,C,CAiCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtDMJ,a;AAwDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}