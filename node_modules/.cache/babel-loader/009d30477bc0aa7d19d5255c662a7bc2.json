{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/field-array.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { Field, FieldArray, useFormik, Form, Formik, getIn } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  combatants: yup.array().of(yup.object().shape({\n    name: yup.string().max(10),\n    hp: yup.string().min(2)\n  }))\n});\n\nfunction PlayerForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      id: generate(),\n      name: \"\",\n      hp: \"\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: _ref => {\n      let {\n        values,\n        handleChange,\n        errors\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          console.log(values.combatants);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"combatants\",\n          children: _ref2 => {\n            let {\n              push,\n              remove\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Players\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: () => push({\n                    id: generate(),\n                    name: \"\",\n                    hp: \"\"\n                  }),\n                  children: \"Add New Field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), values.combatants.map((combatant, index) => {\n                const name = `combatants[${index}.name]`;\n                const errorMessage = getIn(errors, name);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    name: name,\n                    value: combatant.name,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `combatants[${index}.hp]`,\n                    value: combatant.hp,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => remove(index),\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)]\n                }, combatant.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(values, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = PlayerForm;\nexport default PlayerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerForm\");","map":{"version":3,"names":["React","yup","Field","FieldArray","useFormik","Form","Formik","getIn","TextField","Button","generate","validationSchema","object","shape","combatants","array","of","name","string","max","hp","min","PlayerForm","formik","initialValues","id","values","handleChange","errors","e","console","log","push","remove","map","combatant","index","errorMessage","color","JSON","stringify"],"sources":["/home/visna/Code/dnd-tool2/src/components/field-array.js"],"sourcesContent":["import React from \"react\";\nimport * as yup from \"yup\";\nimport { Field, FieldArray, useFormik, Form, Formik, getIn } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { generate } from \"shortid\";\n\nconst validationSchema = yup.object().shape({\n  combatants: yup.array().of(\n    yup.object().shape({\n      name: yup.string().max(10),\n      hp: yup.string().min(2),\n    })\n  ),\n});\n\nfunction PlayerForm() {\n  const formik = useFormik({\n    initialValues: {\n      id: generate(),\n      name: \"\",\n      hp: \"\",\n    },\n  });\n  return (\n    <div>\n      {({ values, handleChange, errors }) => (\n        <Form\n          onSubmit={(e) => {\n            console.log(values.combatants);\n          }}\n        >\n          <FieldArray name=\"combatants\">\n            {({ push, remove }) => (\n              <div>\n                <div>\n                  <h2>Players</h2>\n                  <Button\n                    type=\"button\"\n                    onClick={() => push({ id: generate(), name: \"\", hp: \"\" })}\n                  >\n                    Add New Field\n                  </Button>\n                </div>\n                {values.combatants.map((combatant, index) => {\n                  const name = `combatants[${index}.name]`;\n                  const errorMessage = getIn(errors, name);\n                  return (\n                    <div key={combatant.id}>\n                      <TextField\n                        name={name}\n                        value={combatant.name}\n                        onChange={handleChange}\n                      />\n                      <TextField\n                        name={`combatants[${index}.hp]`}\n                        value={combatant.hp}\n                        onChange={handleChange}\n                      />\n                      {errorMessage && (\n                        <div style={{ color: \"red\" }}>{errorMessage}</div>\n                      )}\n                      <Button onClick={() => remove(index)}>x</Button>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </FieldArray>\n          <button type=\"submit\">Submit</button>\n          <pre>{JSON.stringify(values, null, 2)}</pre>\n        </Form>\n      )}\n    </div>\n  );\n}\n\nexport default PlayerForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}