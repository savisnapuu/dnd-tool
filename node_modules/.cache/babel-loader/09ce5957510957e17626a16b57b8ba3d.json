{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/combatants-form-2/PlayerForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  phone: Yup.string().required(\"This field is required\").min(6, \"At least 06 characters\")\n});\n\nconst PlayerForm = _ref => {\n  _s();\n\n  let {\n    onChange,\n    refId\n  } = _ref;\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await formik.submitForm();\n    }\n  }));\n\n  function watchForm() {\n    if (onChange) {\n      onChange({\n        values: formik.values,\n        validated: formik.isSubmitting ? Object.keys(formik.errors).length === 0 : false\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        combatants: [{\n          id: generate(),\n          name: \"\",\n          hp: \"\",\n          type: props.name\n        }]\n      },\n      onSubmit: values => {\n        watchForm();\n      },\n      validationSchema: validationSchema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayerForm, \"PYzlZ2AGFM0KxtNOGoZVRb5EOEw=\");\n\n_c = PlayerForm;\n\nconst FormB = _ref2 => {\n  _s2();\n\n  let {\n    onChange,\n    refId\n  } = _ref2;\n  const formik = useFormik({\n    initialValues: {\n      phone: \"\"\n    },\n    validationSchema: Yup.object({\n      phone: Yup.string().required(\"This field is required\").min(6, \"At least 06 characters\")\n    }),\n    onSubmit: () => {\n      watchForm();\n    }\n  });\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await formik.submitForm();\n    }\n  }));\n\n  function watchForm() {\n    if (onChange) {\n      onChange({\n        values: formik.values,\n        validated: formik.isSubmitting ? Object.keys(formik.errors).length === 0 : false\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: refId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Form B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone number \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          value: formik.values.phone,\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), formik.errors.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: formik.errors.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(formik.values, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(FormB, \"tE5xOtMgS5/QFQFNRYWVeJqi4L0=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = FormB;\nexport default FormB;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayerForm\");\n$RefreshReg$(_c2, \"FormB\");","map":{"version":3,"names":["React","useFormik","Formik","Yup","generate","validationSchema","object","phone","string","required","min","PlayerForm","onChange","refId","useImperativeHandle","Submit","formik","submitForm","watchForm","values","validated","isSubmitting","Object","keys","errors","length","combatants","id","name","hp","type","props","FormB","initialValues","onSubmit","handleBlur","handleChange","color","JSON","stringify"],"sources":["/home/visna/Code/dnd-tool2/src/components/combatants-form-2/PlayerForm.js"],"sourcesContent":["import React from \"react\";\nimport { useFormik, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { generate } from \"shortid\";\n\nconst validationSchema = Yup.object({\n  phone: Yup.string()\n    .required(\"This field is required\")\n    .min(6, \"At least 06 characters\"),\n});\n\nconst PlayerForm = ({ onChange, refId }) => {\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await formik.submitForm();\n    },\n  }));\n\n  function watchForm() {\n    if (onChange) {\n      onChange({\n        values: formik.values,\n        validated: formik.isSubmitting\n          ? Object.keys(formik.errors).length === 0\n          : false,\n      });\n    }\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          combatants: [{ id: generate(), name: \"\", hp: \"\", type: props.name }],\n        }}\n        onSubmit={(values) => {\n          watchForm();\n        }}\n        validationSchema={validationSchema}\n      ></Formik>\n    </div>\n  );\n};\n\nconst FormB = ({ onChange, refId }) => {\n  const formik = useFormik({\n    initialValues: {\n      phone: \"\",\n    },\n    validationSchema: Yup.object({\n      phone: Yup.string()\n        .required(\"This field is required\")\n        .min(6, \"At least 06 characters\"),\n    }),\n    onSubmit: () => {\n      watchForm();\n    },\n  });\n\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await formik.submitForm();\n    },\n  }));\n\n  function watchForm() {\n    if (onChange) {\n      onChange({\n        values: formik.values,\n        validated: formik.isSubmitting\n          ? Object.keys(formik.errors).length === 0\n          : false,\n      });\n    }\n  }\n\n  return (\n    <form ref={refId}>\n      <div className={\"form\"}>\n        <h3>Form B</h3>\n        <div>\n          <label>Phone number </label>\n          <input\n            name=\"phone\"\n            value={formik.values.phone}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.phone && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.phone}</small>\n            </div>\n          )}\n        </div>\n\n        <pre>{JSON.stringify(formik.values, null, 2)}</pre>\n      </div>\n    </form>\n  );\n};\n\nexport default FormB;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}