{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool/src/components/combatant-form/EnemyForm.js\";\nimport React from \"react\";\nimport { FastField, Field, FieldArray } from \"formik\";\nimport { TextField, Container } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EnemyForm = _ref => {\n  let {\n    formik\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FieldArray, {\n    name: \"enemies\",\n    render: arrayHelpers => /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Enemies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => arrayHelpers.push({\n            id: generate(),\n            name: \"\",\n            hp: \"\",\n            init: Math.floor(Math.random() * 20) + 1,\n            bonus: \"\",\n            type: \"enemy\"\n          }),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.values.enemies.map((combatant, index) => {\n          const name = `enemies[${index}.name]`;\n          const hp = `enemies[${index}.hp]`;\n          const init = `enemies[${index}.init]`;\n          const bonus = `enemies[${index}.bonus]`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FastField, {\n              name: name,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: name,\n                  value: combatant.name,\n                  onChange: formik.handleChange,\n                  label: \"Name\",\n                  id: \"standard-basic\",\n                  variant: \"standard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: hp,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: hp,\n                  value: combatant.hp,\n                  onChange: formik.handleChange,\n                  label: \"HP\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: init,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: init,\n                  value: combatant.init,\n                  onChange: formik.handleChange,\n                  label: \"Init\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: bonus,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: bonus,\n                  value: combatant.bonus,\n                  onChange: formik.handleChange,\n                  label: \"Bonus\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                formik.setFieldValue(`enemies[${index}.init]`, `${Math.floor(Math.random() * 20) + 1}`);\n              },\n              children: \"Roll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.remove(index),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, combatant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EnemyForm;\nexport default EnemyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnemyForm\");","map":{"version":3,"names":["React","FastField","Field","FieldArray","TextField","Container","generate","EnemyForm","formik","arrayHelpers","push","id","name","hp","init","Math","floor","random","bonus","type","values","enemies","map","combatant","index","handleChange","width","setFieldValue","remove"],"sources":["/home/visna/Code/dnd-tool/src/components/combatant-form/EnemyForm.js"],"sourcesContent":["import React from \"react\";\nimport { FastField, Field, FieldArray } from \"formik\";\nimport { TextField, Container } from \"@mui/material\";\nimport { generate } from \"shortid\";\n\nconst EnemyForm = ({ formik }) => {\n  return (\n    <FieldArray\n      name=\"enemies\"\n      render={(arrayHelpers) => (\n        <Container>\n          <div>\n            <h1>Enemies</h1>\n            <button\n              type=\"button\"\n              onClick={() =>\n                arrayHelpers.push({\n                  id: generate(),\n                  name: \"\",\n                  hp: \"\",\n                  init: Math.floor(Math.random() * 20) + 1,\n                  bonus: \"\",\n                  type: \"enemy\",\n                })\n              }\n            >\n              +\n            </button>\n          </div>\n\n          <div>\n            {formik.values.enemies.map((combatant, index) => {\n              const name = `enemies[${index}.name]`;\n              const hp = `enemies[${index}.hp]`;\n              const init = `enemies[${index}.init]`;\n              const bonus = `enemies[${index}.bonus]`;\n              return (\n                <div key={combatant.id}>\n                  <FastField name={name}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={name}\n                          value={combatant.name}\n                          onChange={formik.handleChange}\n                          label=\"Name\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <FastField name={hp}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={hp}\n                          value={combatant.hp}\n                          onChange={formik.handleChange}\n                          label=\"HP\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{ width: 50 }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <FastField name={init}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={init}\n                          value={combatant.init}\n                          onChange={formik.handleChange}\n                          label=\"Init\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{ width: 50 }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <FastField name={bonus}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={bonus}\n                          value={combatant.bonus}\n                          onChange={formik.handleChange}\n                          label=\"Bonus\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{ width: 50 }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      formik.setFieldValue(\n                        `enemies[${index}.init]`,\n                        `${Math.floor(Math.random() * 20) + 1}`\n                      );\n                    }}\n                  >\n                    Roll\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => arrayHelpers.remove(index)}\n                  >\n                    -\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </Container>\n      )}\n    />\n  );\n};\n\nexport default EnemyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}