{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/field-array.js\";\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { Field, FieldArray, FieldProps, Form, Formik, getIn } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  combatants: yup.array().of(yup.object().shape({\n    name: yup.string().max(10),\n    hp: yup.string().min(2)\n  }))\n});\n\nconst PlayerForm = _ref => {\n  let {\n    refId,\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        combatants: [{\n          id: generate(),\n          name: \"\",\n          hp: \"\"\n        }]\n      },\n      onSubmit: values => setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n      }, 500),\n      validationSchema: validationSchema,\n      children: _ref2 => {\n        let {\n          values,\n          handleChange,\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"combatants\",\n            children: _ref3 => {\n              let {\n                push,\n                remove\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Players\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    onClick: () => push({\n                      id: generate(),\n                      name: \"\",\n                      hp: \"\"\n                    }),\n                    children: \"Add New Field\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 19\n                }, this), values.combatants.map((combatant, index) => {\n                  const name = `combatants[${index}.name]`;\n                  const errorMessage = getIn(errors, name);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      name: name,\n                      value: combatant.name,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 25\n                    }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 27\n                    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      name: `combatants[${index}.hp]`,\n                      value: combatant.hp,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 25\n                    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errorMessage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => remove(index),\n                      children: \"x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this)]\n                  }, combatant.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(values, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlayerForm;\nexport default PlayerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerForm\");","map":{"version":3,"names":["React","yup","Field","FieldArray","FieldProps","Form","Formik","getIn","TextField","Button","generate","validationSchema","object","shape","combatants","array","of","name","string","max","hp","min","PlayerForm","refId","handleSubmit","id","values","setTimeout","alert","JSON","stringify","handleChange","errors","push","remove","map","combatant","index","errorMessage","email","touched","color"],"sources":["/home/visna/Code/dnd-tool2/src/components/field-array.js"],"sourcesContent":["import React from \"react\";\nimport * as yup from \"yup\";\nimport { Field, FieldArray, FieldProps, Form, Formik, getIn } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { generate } from \"shortid\";\n\nconst validationSchema = yup.object().shape({\n  combatants: yup.array().of(\n    yup.object().shape({\n      name: yup.string().max(10),\n      hp: yup.string().min(2),\n    })\n  ),\n});\n\nconst PlayerForm = ({ refId, handleSubmit }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ combatants: [{ id: generate(), name: \"\", hp: \"\" }] }}\n        onSubmit={(values) =>\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n          }, 500)\n        }\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, errors }) => (\n          <Form>\n            <FieldArray name=\"combatants\">\n              {({ push, remove }) => (\n                <div>\n                  <div>\n                    <h2>Players</h2>\n                    <Button\n                      type=\"button\"\n                      onClick={() => push({ id: generate(), name: \"\", hp: \"\" })}\n                    >\n                      Add New Field\n                    </Button>\n                  </div>\n                  {values.combatants.map((combatant, index) => {\n                    const name = `combatants[${index}.name]`;\n                    const errorMessage = getIn(errors, name);\n                    return (\n                      <div key={combatant.id}>\n                        <TextField\n                          name={name}\n                          value={combatant.name}\n                          onChange={handleChange}\n                        />\n                        {errors.email && touched.email ? (\n                          <div>{errors.email}</div>\n                        ) : null}\n\n                        <button type=\"submit\">Submit</button>\n                        <TextField\n                          name={`combatants[${index}.hp]`}\n                          value={combatant.hp}\n                          onChange={handleChange}\n                        />\n                        {errorMessage && (\n                          <div style={{ color: \"red\" }}>{errorMessage}</div>\n                        )}\n                        <Button onClick={() => remove(index)}>x</Button>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </FieldArray>\n            <button type=\"submit\">Submit</button>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default PlayerForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}