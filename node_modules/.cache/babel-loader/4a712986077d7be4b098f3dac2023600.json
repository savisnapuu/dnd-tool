{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/field-array.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, FieldArray } from \"formik\"; // Here is an example of a form with an editable list.\n// Next to each input are buttons for insert and remove.\n// If the list is empty, there is a button to add an item.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Friend List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      friends: [\"jared\", \"ian\", \"brent\"]\n    },\n    onSubmit: values => setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n    }, 500),\n    render: _ref => {\n      let {\n        values\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"friends\",\n          render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [values.friends && values.friends.length > 0 ? values.friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: `friends.${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                ,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.insert(index, \"\") // insert an empty string at a position\n                ,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.push(\"\"),\n              children: \"Add a friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n_c = FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"names":["React","Formik","Form","Field","FieldArray","FriendList","friends","values","setTimeout","alert","JSON","stringify","arrayHelpers","length","map","friend","index","remove","insert","push"],"sources":["/home/visna/Code/dnd-tool2/src/components/field-array.js"],"sourcesContent":["import React from \"react\";\n\nimport { Formik, Form, Field, FieldArray } from \"formik\";\n\n// Here is an example of a form with an editable list.\n\n// Next to each input are buttons for insert and remove.\n\n// If the list is empty, there is a button to add an item.\n\nexport const FriendList = () => (\n  <div>\n    <h1>Friend List</h1>\n\n    <Formik\n      initialValues={{ friends: [\"jared\", \"ian\", \"brent\"] }}\n      onSubmit={(values) =>\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n        }, 500)\n      }\n      render={({ values }) => (\n        <Form>\n          <FieldArray\n            name=\"friends\"\n            render={(arrayHelpers) => (\n              <div>\n                {values.friends && values.friends.length > 0 ? (\n                  values.friends.map((friend, index) => (\n                    <div key={index}>\n                      <Field name={`friends.${index}`} />\n\n                      <button\n                        type=\"button\"\n                        onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\n                      >\n                        -\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        onClick={() => arrayHelpers.insert(index, \"\")} // insert an empty string at a position\n                      >\n                        +\n                      </button>\n                    </div>\n                  ))\n                ) : (\n                  <button type=\"button\" onClick={() => arrayHelpers.push(\"\")}>\n                    {/* show this when user has removed all friends from the list */}\n                    Add a friend\n                  </button>\n                )}\n\n                <div>\n                  <button type=\"submit\">Submit</button>\n                </div>\n              </div>\n            )}\n          />\n        </Form>\n      )}\n    />\n  </div>\n);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,QAAhD,C,CAEA;AAEA;AAEA;;;AAEA,OAAO,MAAMC,UAAU,GAAG,mBACxB;EAAA,wBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,eAGE,QAAC,MAAD;IACE,aAAa,EAAE;MAAEC,OAAO,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB;IAAX,CADjB;IAEE,QAAQ,EAAGC,MAAD,IACRC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD,CAFS,EAEP,GAFO,CAHd;IAOE,MAAM,EAAE;MAAA,IAAC;QAAEA;MAAF,CAAD;MAAA,oBACN,QAAC,IAAD;QAAA,uBACE,QAAC,UAAD;UACE,IAAI,EAAC,SADP;UAEE,MAAM,EAAGK,YAAD,iBACN;YAAA,WACGL,MAAM,CAACD,OAAP,IAAkBC,MAAM,CAACD,OAAP,CAAeO,MAAf,GAAwB,CAA1C,GACCN,MAAM,CAACD,OAAP,CAAeQ,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBACjB;cAAA,wBACE,QAAC,KAAD;gBAAO,IAAI,EAAG,WAAUA,KAAM;cAA9B;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAGE;gBACE,IAAI,EAAC,QADP;gBAEE,OAAO,EAAE,MAAMJ,YAAY,CAACK,MAAb,CAAoBD,KAApB,CAFjB,CAE6C;gBAF7C;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHF,eAUE;gBACE,IAAI,EAAC,QADP;gBAEE,OAAO,EAAE,MAAMJ,YAAY,CAACM,MAAb,CAAoBF,KAApB,EAA2B,EAA3B,CAFjB,CAEiD;gBAFjD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAVF;YAAA,GAAUA,KAAV;cAAA;cAAA;cAAA;YAAA,QADF,CADD,gBAqBC;cAAQ,IAAI,EAAC,QAAb;cAAsB,OAAO,EAAE,MAAMJ,YAAY,CAACO,IAAb,CAAkB,EAAlB,CAArC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAtBJ,eA4BE;cAAA,uBACE;gBAAQ,IAAI,EAAC,QAAb;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QA5BF;UAAA;YAAA;YAAA;YAAA;UAAA;QAHJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADM;IAAA;EAPV;IAAA;IAAA;IAAA;EAAA,QAHF;AAAA;EAAA;EAAA;EAAA;AAAA,QADK;KAAMd,U"},"metadata":{},"sourceType":"module"}