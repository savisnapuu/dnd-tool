{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/combatants-form-2/PlayerForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useContext } from \"react\";\nimport { useFormik, Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport DataContext from \"../../DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerForm = (_ref, onChange) => {\n  _s();\n\n  let {\n    refId\n  } = _ref;\n  const {\n    pushData\n  } = useContext(DataContext);\n  const ref = useRef(null);\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await console.log(ref.current.values);\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        phone: \"\",\n        name: \"\"\n      },\n      onSubmit: values => {},\n      innerRef: ref,\n      children: _ref2 => {\n        let {\n          values,\n          handleChange\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          name: \"combatants\",\n          ref: refId,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"phone\",\n            value: values.phone,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            value: values.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(values, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"sub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}; // const FormB = ({ onChange, refId }) => {\n//   const formik = useFormik({\n//     initialValues: {\n//       phone: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       phone: Yup.string()\n//         .required(\"This field is required\")\n//         .min(6, \"At least 06 characters\"),\n//     }),\n//     onSubmit: () => {\n//       watchForm();\n//     },\n//   });\n//   React.useImperativeHandle(refId, () => ({\n//     Submit: async () => {\n//       await formik.submitForm();\n//     },\n//   }));\n//   function watchForm() {\n//     if (onChange) {\n//       onChange({\n//         values: formik.values,\n//         validated: formik.isSubmitting\n//           ? Object.keys(formik.errors).length === 0\n//           : false,\n//       });\n//     }\n//   }\n//   return (\n//     <form ref={refId}>\n//       <div className={\"form\"}>\n//         <h3>Form B</h3>\n//         <div>\n//           <label>Phone number </label>\n//           <input\n//             name=\"phone\"\n//             value={formik.values.phone}\n//             onBlur={formik.handleBlur}\n//             onChange={formik.handleChange}\n//           />\n//           {formik.errors.phone && (\n//             <div style={{ color: \"red\" }}>\n//               <small>{formik.errors.phone}</small>\n//             </div>\n//           )}\n//         </div>\n//         <pre>{JSON.stringify(formik.values, null, 2)}</pre>\n//       </div>\n//     </form>\n//   );\n// };\n\n\n_s(PlayerForm, \"LU1ahsxX/QpnZK2uus+SaEVDBZs=\");\n\n_c = PlayerForm;\nexport default PlayerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerForm\");","map":{"version":3,"names":["React","useRef","useContext","useFormik","Formik","Form","Yup","DataContext","PlayerForm","onChange","refId","pushData","ref","useImperativeHandle","Submit","console","log","current","values","phone","name","handleChange","JSON","stringify"],"sources":["/home/visna/Code/dnd-tool2/src/components/combatants-form-2/PlayerForm.js"],"sourcesContent":["import React, { useRef, useContext } from \"react\";\nimport { useFormik, Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport DataContext from \"../../DataContext\";\n\nconst PlayerForm = ({ refId }, onChange) => {\n  const { pushData } = useContext(DataContext);\n  const ref = useRef(null);\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await console.log(ref.current.values);\n    },\n  }));\n  return (\n    <div>\n      <Formik\n        initialValues={{ phone: \"\", name: \"\" }}\n        onSubmit={(values) => {}}\n        innerRef={ref}\n      >\n        {({ values, handleChange }) => (\n          <Form name=\"combatants\" ref={refId}>\n            <input name=\"phone\" value={values.phone} onChange={handleChange} />\n            <input name=\"name\" value={values.name} onChange={handleChange} />\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n            <button type=\"submit\">sub</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\n// const FormB = ({ onChange, refId }) => {\n//   const formik = useFormik({\n//     initialValues: {\n//       phone: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       phone: Yup.string()\n//         .required(\"This field is required\")\n//         .min(6, \"At least 06 characters\"),\n//     }),\n//     onSubmit: () => {\n//       watchForm();\n//     },\n//   });\n\n//   React.useImperativeHandle(refId, () => ({\n//     Submit: async () => {\n//       await formik.submitForm();\n//     },\n//   }));\n\n//   function watchForm() {\n//     if (onChange) {\n//       onChange({\n//         values: formik.values,\n//         validated: formik.isSubmitting\n//           ? Object.keys(formik.errors).length === 0\n//           : false,\n//       });\n//     }\n//   }\n\n//   return (\n//     <form ref={refId}>\n//       <div className={\"form\"}>\n//         <h3>Form B</h3>\n//         <div>\n//           <label>Phone number </label>\n//           <input\n//             name=\"phone\"\n//             value={formik.values.phone}\n//             onBlur={formik.handleBlur}\n//             onChange={formik.handleChange}\n//           />\n//           {formik.errors.phone && (\n//             <div style={{ color: \"red\" }}>\n//               <small>{formik.errors.phone}</small>\n//             </div>\n//           )}\n//         </div>\n\n//         <pre>{JSON.stringify(formik.values, null, 2)}</pre>\n//       </div>\n//     </form>\n//   );\n// };\n\nexport default PlayerForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAEA,MAAMC,UAAU,GAAG,OAAYC,QAAZ,KAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EAC1C,MAAM;IAAEC;EAAF,IAAeT,UAAU,CAACK,WAAD,CAA/B;EACA,MAAMK,GAAG,GAAGX,MAAM,CAAC,IAAD,CAAlB;EACAD,KAAK,CAACa,mBAAN,CAA0BH,KAA1B,EAAiC,OAAO;IACtCI,MAAM,EAAE,YAAY;MAClB,MAAMC,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,OAAJ,CAAYC,MAAxB,CAAN;IACD;EAHqC,CAAP,CAAjC;EAKA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAT;QAAaC,IAAI,EAAE;MAAnB,CADjB;MAEE,QAAQ,EAAGF,MAAD,IAAY,CAAE,CAF1B;MAGE,QAAQ,EAAEN,GAHZ;MAAA,UAKG;QAAA,IAAC;UAAEM,MAAF;UAAUG;QAAV,CAAD;QAAA,oBACC,QAAC,IAAD;UAAM,IAAI,EAAC,YAAX;UAAwB,GAAG,EAAEX,KAA7B;UAAA,wBACE;YAAO,IAAI,EAAC,OAAZ;YAAoB,KAAK,EAAEQ,MAAM,CAACC,KAAlC;YAAyC,QAAQ,EAAEE;UAAnD;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAO,IAAI,EAAC,MAAZ;YAAmB,KAAK,EAAEH,MAAM,CAACE,IAAjC;YAAuC,QAAQ,EAAEC;UAAjD;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,UAAMC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B;UAAN;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MAAA;IALH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA1BD,C,CA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;GAnFMV,U;;KAAAA,U;AAqFN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}