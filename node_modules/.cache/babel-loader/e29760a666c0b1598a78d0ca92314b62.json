{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool/src/components/BattleTracker.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Slider } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport React, { useContext } from \"react\";\nimport DataContext from \"../DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BattleTracker() {\n  _s();\n\n  const {\n    data\n  } = useContext(DataContext);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data.combatants.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.init\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.hp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BattleTracker, \"0hAPxt73XWcCCQAWfZjlyZ/wuPM=\");\n\n_c = BattleTracker;\nexport default BattleTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"BattleTracker\");","map":{"version":3,"names":["Card","Slider","Container","React","useContext","DataContext","BattleTracker","data","combatants","map","item","init","name","hp","id"],"sources":["/home/visna/Code/dnd-tool/src/components/BattleTracker.js"],"sourcesContent":["import { Card, Slider } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport React, { useContext } from \"react\";\nimport DataContext from \"../DataContext\";\n\nfunction BattleTracker() {\n  const { data } = useContext(DataContext);\n\n  return (\n    <Container>\n      {data.combatants.map((item) => (\n        <Card key={item.id}>\n          <h1>{item.init}</h1>\n          <h1>{item.name}</h1>\n          <h1>{item.hp}</h1>\n        </Card>\n      ))}\n    </Container>\n  );\n}\n\nexport default BattleTracker;\n"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,eAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAWH,UAAU,CAACC,WAAD,CAA3B;EAEA,oBACE,QAAC,SAAD;IAAA,UACGE,IAAI,CAACC,UAAL,CAAgBC,GAAhB,CAAqBC,IAAD,iBACnB,QAAC,IAAD;MAAA,wBACE;QAAA,UAAKA,IAAI,CAACC;MAAV;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAKD,IAAI,CAACE;MAAV;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAKF,IAAI,CAACG;MAAV;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA,GAAWH,IAAI,CAACI,EAAhB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAdQR,a;;KAAAA,a;AAgBT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}