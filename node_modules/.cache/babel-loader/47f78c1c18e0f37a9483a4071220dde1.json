{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/field-array.js\";\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  people: yup.array().of(yup.object().shape({\n    firstName: yup.string().max(10),\n    lastName: yup.string().min(2)\n  }))\n});\n\nconst FriendList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Friend List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      friends: [{\n        age: \"\",\n        name: \"\"\n      }]\n    },\n    onSubmit: values => setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n    }, 500),\n    render: _ref => {\n      let {\n        values\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"friends\",\n          render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [values.friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: `friends[${index}].name`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: `friends.${index}.age`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.remove(index),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.push({\n                name: \"\",\n                age: \"\"\n              }),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n\n_c = FriendList;\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"names":["React","yup","Formik","Form","Field","FieldArray","validationSchema","object","shape","people","array","of","firstName","string","max","lastName","min","FriendList","friends","age","name","values","setTimeout","alert","JSON","stringify","arrayHelpers","map","friend","index","remove","push"],"sources":["/home/visna/Code/dnd-tool2/src/components/field-array.js"],"sourcesContent":["import React from \"react\";\nimport * as yup from \"yup\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\n\nconst validationSchema = yup.object().shape({\n  people: yup.array().of(\n    yup.object().shape({\n      firstName: yup.string().max(10),\n      lastName: yup.string().min(2),\n    })\n  ),\n});\n\nconst FriendList = () => (\n  <div>\n    <h1>Friend List</h1>\n    <Formik\n      initialValues={{ friends: [{ age: \"\", name: \"\" }] }}\n      onSubmit={(values) =>\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n        }, 500)\n      }\n      render={({ values }) => (\n        <Form>\n          <FieldArray\n            name=\"friends\"\n            render={(arrayHelpers) => (\n              <div>\n                {values.friends.map((friend, index) => (\n                  <div key={index}>\n                    {/** both these conventions do the same */}\n\n                    <Field name={`friends[${index}].name`} />\n\n                    <Field name={`friends.${index}.age`} />\n\n                    <button\n                      type=\"button\"\n                      onClick={() => arrayHelpers.remove(index)}\n                    >\n                      -\n                    </button>\n                  </div>\n                ))}\n\n                <button\n                  type=\"button\"\n                  onClick={() => arrayHelpers.push({ name: \"\", age: \"\" })}\n                >\n                  +\n                </button>\n              </div>\n            )}\n          />\n          <div>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </Form>\n      )}\n    />\n  </div>\n);\n\nexport default FriendList;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,QAAhD;;AAEA,MAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;EAC1CC,MAAM,EAAER,GAAG,CAACS,KAAJ,GAAYC,EAAZ,CACNV,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;IACjBI,SAAS,EAAEX,GAAG,CAACY,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,CADM;IAEjBC,QAAQ,EAAEd,GAAG,CAACY,MAAJ,GAAaG,GAAb,CAAiB,CAAjB;EAFO,CAAnB,CADM;AADkC,CAAnB,CAAzB;;AASA,MAAMC,UAAU,GAAG,mBACjB;EAAA,wBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,eAEE,QAAC,MAAD;IACE,aAAa,EAAE;MAAEC,OAAO,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAP;QAAWC,IAAI,EAAE;MAAjB,CAAD;IAAX,CADjB;IAEE,QAAQ,EAAGC,MAAD,IACRC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD,CAFS,EAEP,GAFO,CAHd;IAOE,MAAM,EAAE;MAAA,IAAC;QAAEA;MAAF,CAAD;MAAA,oBACN,QAAC,IAAD;QAAA,wBACE,QAAC,UAAD;UACE,IAAI,EAAC,SADP;UAEE,MAAM,EAAGK,YAAD,iBACN;YAAA,WACGL,MAAM,CAACH,OAAP,CAAeS,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBAClB;cAAA,wBAGE,QAAC,KAAD;gBAAO,IAAI,EAAG,WAAUA,KAAM;cAA9B;gBAAA;gBAAA;gBAAA;cAAA,QAHF,eAKE,QAAC,KAAD;gBAAO,IAAI,EAAG,WAAUA,KAAM;cAA9B;gBAAA;gBAAA;gBAAA;cAAA,QALF,eAOE;gBACE,IAAI,EAAC,QADP;gBAEE,OAAO,EAAE,MAAMH,YAAY,CAACI,MAAb,CAAoBD,KAApB,CAFjB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAPF;YAAA,GAAUA,KAAV;cAAA;cAAA;cAAA;YAAA,QADD,CADH,eAkBE;cACE,IAAI,EAAC,QADP;cAEE,OAAO,EAAE,MAAMH,YAAY,CAACK,IAAb,CAAkB;gBAAEX,IAAI,EAAE,EAAR;gBAAYD,GAAG,EAAE;cAAjB,CAAlB,CAFjB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAlBF;UAAA;YAAA;YAAA;YAAA;UAAA;QAHJ;UAAA;UAAA;UAAA;QAAA,QADF,eA+BE;UAAA,uBACE;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QA/BF;MAAA;QAAA;QAAA;QAAA;MAAA,QADM;IAAA;EAPV;IAAA;IAAA;IAAA;EAAA,QAFF;AAAA;EAAA;EAAA;EAAA;AAAA,QADF;;KAAMF,U;AAmDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}