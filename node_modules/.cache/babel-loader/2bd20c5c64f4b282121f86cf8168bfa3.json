{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool/src/components/combatant-form/EnemyForm.js\";\nimport React from \"react\";\nimport { FastField, FieldArray } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EnemyForm = _ref => {\n  let {\n    formik\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FieldArray, {\n    name: \"enemies\",\n    render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Enemies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => arrayHelpers.push({\n            id: generate(),\n            name: \"\",\n            hp: \"\",\n            init: Math.floor(Math.random() * 20) + 1,\n            bonus: \"\",\n            type: \"enemy\"\n          }),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.values.enemies.map((combatant, index) => {\n          const name = `enemies[${index}.name]`;\n          const hp = `enemies[${index}.hp]`;\n          const init = `enemies[${index}.init]`;\n          const bonus = `enemies[${index}.bonus]`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FastField, {\n                name: \"name\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"name\",\n                  onChange: handleChange,\n                  value: values.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"email\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"email\",\n                  onChange: handleChange,\n                  value: values.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: submitForm,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                formik.setFieldValue(`enemies[${index}.init]`, `${Math.floor(Math.random() * 20) + 1}`);\n              },\n              children: \"Roll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.remove(index),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, combatant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EnemyForm;\nexport default EnemyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnemyForm\");","map":{"version":3,"names":["React","FastField","FieldArray","TextField","generate","EnemyForm","formik","arrayHelpers","push","id","name","hp","init","Math","floor","random","bonus","type","values","enemies","map","combatant","index","handleChange","email","submitForm","setFieldValue","remove"],"sources":["/home/visna/Code/dnd-tool/src/components/combatant-form/EnemyForm.js"],"sourcesContent":["import React from \"react\";\nimport { FastField, FieldArray } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport { generate } from \"shortid\";\n\nconst EnemyForm = ({ formik }) => {\n  return (\n    <FieldArray\n      name=\"enemies\"\n      render={(arrayHelpers) => (\n        <div>\n          <div>\n            <h1>Enemies</h1>\n            <button\n              type=\"button\"\n              onClick={() =>\n                arrayHelpers.push({\n                  id: generate(),\n                  name: \"\",\n                  hp: \"\",\n                  init: Math.floor(Math.random() * 20) + 1,\n                  bonus: \"\",\n                  type: \"enemy\",\n                })\n              }\n            >\n              +\n            </button>\n          </div>\n\n          <div>\n            {formik.values.enemies.map((combatant, index) => {\n              const name = `enemies[${index}.name]`;\n              const hp = `enemies[${index}.hp]`;\n              const init = `enemies[${index}.init]`;\n              const bonus = `enemies[${index}.bonus]`;\n              return (\n                <div key={combatant.id}>\n                  <>\n                    {/* Re-renders when typing inside the 'name' field */}\n                    <FastField name=\"name\">\n                      <TextField\n                        name=\"name\"\n                        onChange={handleChange}\n                        value={values.name}\n                      />\n                    </FastField>\n\n                    {/* Re-renders when typing inside the 'email' field */}\n                    <FastField name=\"email\">\n                      <TextField\n                        name=\"email\"\n                        onChange={handleChange}\n                        value={values.email}\n                      />\n                    </FastField>\n\n                    <Button onClick={submitForm}>Submit</Button>\n                  </>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      formik.setFieldValue(\n                        `enemies[${index}.init]`,\n                        `${Math.floor(Math.random() * 20) + 1}`\n                      );\n                    }}\n                  >\n                    Roll\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => arrayHelpers.remove(index)}\n                  >\n                    -\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default EnemyForm;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,QAAtC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,QAAT,QAAyB,SAAzB;;;;AAEA,MAAMC,SAAS,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAChC,oBACE,QAAC,UAAD;IACE,IAAI,EAAC,SADP;IAEE,MAAM,EAAGC,YAAD,iBACN;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,OAAO,EAAE,MACPA,YAAY,CAACC,IAAb,CAAkB;YAChBC,EAAE,EAAEL,QAAQ,EADI;YAEhBM,IAAI,EAAE,EAFU;YAGhBC,EAAE,EAAE,EAHY;YAIhBC,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAJvB;YAKhBC,KAAK,EAAE,EALS;YAMhBC,IAAI,EAAE;UANU,CAAlB,CAHJ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAoBE;QAAA,UACGX,MAAM,CAACY,MAAP,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;UAC/C,MAAMZ,IAAI,GAAI,WAAUY,KAAM,QAA9B;UACA,MAAMX,EAAE,GAAI,WAAUW,KAAM,MAA5B;UACA,MAAMV,IAAI,GAAI,WAAUU,KAAM,QAA9B;UACA,MAAMN,KAAK,GAAI,WAAUM,KAAM,SAA/B;UACA,oBACE;YAAA,wBACE;cAAA,wBAEE,QAAC,SAAD;gBAAW,IAAI,EAAC,MAAhB;gBAAA,uBACE,QAAC,SAAD;kBACE,IAAI,EAAC,MADP;kBAEE,QAAQ,EAAEC,YAFZ;kBAGE,KAAK,EAAEL,MAAM,CAACR;gBAHhB;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAWE,QAAC,SAAD;gBAAW,IAAI,EAAC,OAAhB;gBAAA,uBACE,QAAC,SAAD;kBACE,IAAI,EAAC,OADP;kBAEE,QAAQ,EAAEa,YAFZ;kBAGE,KAAK,EAAEL,MAAM,CAACM;gBAHhB;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAXF,eAmBE,QAAC,MAAD;gBAAQ,OAAO,EAAEC,UAAjB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAnBF;YAAA,gBADF,eAsBE;cACE,IAAI,EAAC,QADP;cAEE,OAAO,EAAE,MAAM;gBACbnB,MAAM,CAACoB,aAAP,CACG,WAAUJ,KAAM,QADnB,EAEG,GAAET,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAE,EAFxC;cAID,CAPH;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAtBF,eAiCE;cACE,IAAI,EAAC,QADP;cAEE,OAAO,EAAE,MAAMR,YAAY,CAACoB,MAAb,CAAoBL,KAApB,CAFjB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAjCF;UAAA,GAAUD,SAAS,CAACZ,EAApB;YAAA;YAAA;YAAA;UAAA,QADF;QA0CD,CA/CA;MADH;QAAA;QAAA;QAAA;MAAA,QApBF;IAAA;MAAA;MAAA;MAAA;IAAA;EAHJ;IAAA;IAAA;IAAA;EAAA,QADF;AA8ED,CA/ED;;KAAMJ,S;AAiFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}