{"ast":null,"code":"var _jsxFileName = \"/home/visna/Documents/Code/dnd-tool/src/components/combatant-form/EnemyForm.js\";\nimport { TextField } from \"@mui/material\";\nimport { FieldArray, Form } from \"formik\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormA = _ref => {\n  let {\n    formik\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FieldArray, {\n    name: \"players\",\n    children: _ref2 => {\n      let {\n        push,\n        remove\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => push({\n              id: generate(),\n              name: \"\",\n              hp: \"\",\n              type: props.name\n            }),\n            children: \"Add New Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), values.players.map((combatant, index) => {\n          const name = `players[${index}.name]`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              name: name,\n              value: combatant.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: `combatants[${index}.hp]`,\n              value: combatant.hp,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => remove(index),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, combatant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n  /* <div className={\"form\"}>\n      <h3>Form A</h3>\n      <div>\n        <label>Name </label>\n        <input\n          name=\"formA.name\"\n          value={formik.values.formA.name}\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.formA && (\n          <div style={{ color: \"red\" }}>\n            <small>{formik.errors.formA.name}</small>\n          </div>\n        )}\n      </div>\n      <br />\n      <div>\n        <label>Email </label>\n        <input\n          name=\"formA.email\"\n          value={formik.values.formA.email}\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.formA && (\n          <div style={{ color: \"red\" }}>\n            <small>{formik.errors.formA.email}</small>\n          </div>\n        )}\n      </div>\n      <pre>{JSON.stringify(formik.values.formA, null, 2)}</pre>\n    </div> */\n  ;\n};\n\n_c = FormA;\nexport default FormA;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormA\");","map":{"version":3,"names":["TextField","FieldArray","Form","React","FormA","formik","push","remove","props","name","id","generate","hp","type","values","players","map","combatant","index","handleChange"],"sources":["/home/visna/Documents/Code/dnd-tool/src/components/combatant-form/EnemyForm.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { FieldArray, Form } from \"formik\";\nimport React from \"react\";\n\nconst FormA = ({ formik }) => {\n  return (\n    <FieldArray name=\"players\">\n      {({ push, remove }) => (\n        <div>\n          <div>\n            <h2>{props.name}</h2>\n            <Button\n              type=\"button\"\n              onClick={() =>\n                push({\n                  id: generate(),\n                  name: \"\",\n                  hp: \"\",\n                  type: props.name,\n                })\n              }\n            >\n              Add New Field\n            </Button>\n          </div>\n          {values.players.map((combatant, index) => {\n            const name = `players[${index}.name]`;\n            return (\n              <div key={combatant.id}>\n                <TextField\n                  name={name}\n                  value={combatant.name}\n                  onChange={handleChange}\n                />\n                <TextField\n                  name={`combatants[${index}.hp]`}\n                  value={combatant.hp}\n                  onChange={handleChange}\n                />\n                <Button onClick={() => remove(index)}>x</Button>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </FieldArray>\n    /* <div className={\"form\"}>\n        <h3>Form A</h3>\n        <div>\n          <label>Name </label>\n          <input\n            name=\"formA.name\"\n            value={formik.values.formA.name}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.formA && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.formA.name}</small>\n            </div>\n          )}\n        </div>\n        <br />\n        <div>\n          <label>Email </label>\n          <input\n            name=\"formA.email\"\n            value={formik.values.formA.email}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.formA && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.formA.email}</small>\n            </div>\n          )}\n        </div>\n        <pre>{JSON.stringify(formik.values.formA, null, 2)}</pre>\n      </div> */\n  );\n};\n\nexport default FormA;\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC5B,oBACE,QAAC,UAAD;IAAY,IAAI,EAAC,SAAjB;IAAA,UACG;MAAA,IAAC;QAAEC,IAAF;QAAQC;MAAR,CAAD;MAAA,oBACC;QAAA,wBACE;UAAA,wBACE;YAAA,UAAKC,KAAK,CAACC;UAAX;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,MAAD;YACE,IAAI,EAAC,QADP;YAEE,OAAO,EAAE,MACPH,IAAI,CAAC;cACHI,EAAE,EAAEC,QAAQ,EADT;cAEHF,IAAI,EAAE,EAFH;cAGHG,EAAE,EAAE,EAHD;cAIHC,IAAI,EAAEL,KAAK,CAACC;YAJT,CAAD,CAHR;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAiBGK,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;UACxC,MAAMT,IAAI,GAAI,WAAUS,KAAM,QAA9B;UACA,oBACE;YAAA,wBACE,QAAC,SAAD;cACE,IAAI,EAAET,IADR;cAEE,KAAK,EAAEQ,SAAS,CAACR,IAFnB;cAGE,QAAQ,EAAEU;YAHZ;cAAA;cAAA;cAAA;YAAA,QADF,eAME,QAAC,SAAD;cACE,IAAI,EAAG,cAAaD,KAAM,MAD5B;cAEE,KAAK,EAAED,SAAS,CAACL,EAFnB;cAGE,QAAQ,EAAEO;YAHZ;cAAA;cAAA;cAAA;YAAA,QANF,eAWE,QAAC,MAAD;cAAQ,OAAO,EAAE,MAAMZ,MAAM,CAACW,KAAD,CAA7B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAXF;UAAA,GAAUD,SAAS,CAACP,EAApB;YAAA;YAAA;YAAA;UAAA,QADF;QAeD,CAjBA,CAjBH;MAAA;QAAA;QAAA;QAAA;MAAA,QADD;IAAA;EADH;IAAA;IAAA;IAAA;EAAA;EAwCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAzEE;AA2ED,CA5ED;;KAAMN,K;AA8EN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}