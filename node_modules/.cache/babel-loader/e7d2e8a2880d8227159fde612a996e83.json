{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool/src/components/combatant-form/PlayerForm.js\";\nimport React from \"react\";\nimport { FieldArray, FastField } from \"formik\";\nimport { TextField, Container, Box } from \"@mui/material\";\nimport { generate } from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerForm = _ref => {\n  let {\n    formik\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FieldArray, {\n    name: \"players\",\n    render: arrayHelpers => /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => arrayHelpers.push({\n            id: generate(),\n            name: \"\",\n            hp: \"\",\n            init: \"\",\n            bonus: \"\",\n            type: \"player\"\n          }),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.values.players.map((combatant, index) => {\n          const name = `players[${index}.name]`;\n          const hp = `players[${index}.hp]`;\n          const init = `players[${index}.init]`;\n          const bonus = `players[${index}.bonus]`;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(FastField, {\n              name: name,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: name,\n                  value: combatant.name,\n                  onChange: formik.handleChange,\n                  label: \"Name\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 100,\n                    input: {\n                      color: \"rgb(160, 161, 178)\"\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      color: \"rgb(160, 161, 178)\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: hp,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: hp,\n                  value: combatant.hp,\n                  onChange: formik.handleChange,\n                  label: \"HP\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: init,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: init,\n                  value: combatant.init,\n                  onChange: formik.handleChange,\n                  label: \"Init\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: bonus,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  name: bonus,\n                  value: combatant.bonus,\n                  onChange: formik.handleChange,\n                  label: \"Bonus\",\n                  id: \"standard-basic\",\n                  variant: \"standard\",\n                  sx: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 25\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.remove(index),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, combatant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlayerForm;\nexport default PlayerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerForm\");","map":{"version":3,"names":["React","FieldArray","FastField","TextField","Container","Box","generate","PlayerForm","formik","arrayHelpers","push","id","name","hp","init","bonus","type","values","players","map","combatant","index","display","justifyContent","handleChange","width","input","color","style","remove"],"sources":["/home/visna/Code/dnd-tool/src/components/combatant-form/PlayerForm.js"],"sourcesContent":["import React from \"react\";\nimport { FieldArray, FastField } from \"formik\";\nimport { TextField, Container, Box } from \"@mui/material\";\nimport { generate } from \"shortid\";\n\nconst PlayerForm = ({ formik }) => {\n  return (\n    <FieldArray\n      name=\"players\"\n      render={(arrayHelpers) => (\n        <Container>\n          <div>\n            <h1>Players</h1>\n            <button\n              type=\"button\"\n              onClick={() =>\n                arrayHelpers.push({\n                  id: generate(),\n                  name: \"\",\n                  hp: \"\",\n                  init: \"\",\n                  bonus: \"\",\n                  type: \"player\",\n                })\n              }\n            >\n              +\n            </button>\n          </div>\n\n          <div>\n            {formik.values.players.map((combatant, index) => {\n              const name = `players[${index}.name]`;\n              const hp = `players[${index}.hp]`;\n              const init = `players[${index}.init]`;\n              const bonus = `players[${index}.bonus]`;\n              return (\n                <Box\n                  key={combatant.id}\n                  sx={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <FastField name={name}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={name}\n                          value={combatant.name}\n                          onChange={formik.handleChange}\n                          label=\"Name\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{\n                            width: 100,\n                            input: { color: \"rgb(160, 161, 178)\" },\n                          }}\n                          InputLabelProps={{\n                            style: { color: \"rgb(160, 161, 178)\" },\n                          }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <FastField name={hp}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={hp}\n                          value={combatant.hp}\n                          onChange={formik.handleChange}\n                          label=\"HP\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{ width: 50 }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <FastField name={init}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={init}\n                          value={combatant.init}\n                          onChange={formik.handleChange}\n                          label=\"Init\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{ width: 50 }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <FastField name={bonus}>\n                    {() => {\n                      return (\n                        <TextField\n                          name={bonus}\n                          value={combatant.bonus}\n                          onChange={formik.handleChange}\n                          label=\"Bonus\"\n                          id=\"standard-basic\"\n                          variant=\"standard\"\n                          sx={{ width: 50 }}\n                        />\n                      );\n                    }}\n                  </FastField>\n                  <Box>\n                    <button\n                      type=\"button\"\n                      onClick={() => arrayHelpers.remove(index)}\n                    >\n                      -\n                    </button>\n                  </Box>\n                </Box>\n              );\n            })}\n          </div>\n        </Container>\n      )}\n    />\n  );\n};\n\nexport default PlayerForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}