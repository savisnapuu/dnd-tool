{"ast":null,"code":"var _jsxFileName = \"/home/visna/Code/dnd-tool2/src/components/PlayersForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik, Form, Field, FieldArray } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormA = _ref => {\n  _s();\n\n  let {\n    onChange,\n    refId\n  } = _ref;\n  const [combatants, setAllcombatants] = useState([{\n    name: \"\",\n    hp: \"\",\n    init: 0,\n    bonus: 0,\n    type: \"player\"\n  }]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      hp: \"\",\n      init: \"\",\n      bonus: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"This field is required\"),\n      hp: Yup.string().required(\"This field is required\"),\n      init: Yup.string().required(\"This field is required\"),\n      bonus: Yup.string().required(\"This field is required\")\n    }),\n    onSubmit: () => {\n      watchForm();\n    }\n  });\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await formik.submitForm();\n    }\n  }));\n\n  function watchForm() {\n    if (onChange) {\n      onChange({\n        values: formik.values,\n        validated: formik.isSubmitting ? Object.keys(formik.errors).length === 0 : false\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: refId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Form A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          value: formik.values.name,\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: formik.values.email,\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(formik.values, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormA, \"R5FMXqo05szH3Ra6D8WXpaJl5Ns=\", false, function () {\n  return [useFormik];\n});\n\n_c = FormA;\nexport default FormA;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormA\");","map":{"version":3,"names":["React","useState","useFormik","Form","Field","FieldArray","Yup","FormA","onChange","refId","combatants","setAllcombatants","name","hp","init","bonus","type","formik","initialValues","validationSchema","object","string","required","onSubmit","watchForm","useImperativeHandle","Submit","submitForm","values","validated","isSubmitting","Object","keys","errors","length","handleBlur","handleChange","color","email","JSON","stringify"],"sources":["/home/visna/Code/dnd-tool2/src/components/PlayersForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik, Form, Field, FieldArray } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst FormA = ({ onChange, refId }) => {\n  const [combatants, setAllcombatants] = useState([\n    { name: \"\", hp: \"\", init: 0, bonus: 0, type: \"player\" },\n  ]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      hp: \"\",\n      init: \"\",\n      bonus: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"This field is required\"),\n      hp: Yup.string().required(\"This field is required\"),\n      init: Yup.string().required(\"This field is required\"),\n      bonus: Yup.string().required(\"This field is required\"),\n    }),\n    onSubmit: () => {\n      watchForm();\n    },\n  });\n\n  React.useImperativeHandle(refId, () => ({\n    Submit: async () => {\n      await formik.submitForm();\n    },\n  }));\n\n  function watchForm() {\n    if (onChange) {\n      onChange({\n        values: formik.values,\n        validated: formik.isSubmitting\n          ? Object.keys(formik.errors).length === 0\n          : false,\n      });\n    }\n  }\n\n  return (\n    <form ref={refId}>\n      <div className={\"form\"}>\n        <h3>Form A</h3>\n        <div>\n          <label>Name </label>\n          <input\n            name=\"name\"\n            value={formik.values.name}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.name && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.name}</small>\n            </div>\n          )}\n        </div>\n        <br />\n        <div>\n          <label>Email </label>\n          <input\n            name=\"email\"\n            value={formik.values.email}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.email && (\n            <div style={{ color: \"red\" }}>\n              <small>{formik.errors.email}</small>\n            </div>\n          )}\n        </div>\n        <pre>{JSON.stringify(formik.values, null, 2)}</pre>\n      </div>\n    </form>\n  );\n};\n\nexport default FormA;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}